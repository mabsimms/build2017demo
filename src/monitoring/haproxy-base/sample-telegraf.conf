
[[inputs.logparser]]
  ## file(s) to tail:
  files = ["sample-haproxy.log"]
  from_beginning = true
  name_override = "haproxy"
  ## For parsing logstash-style "grok" patterns:
  [inputs.logparser.grok]
    patterns = ["%{CUST_LOG}"]
    custom_patterns = '''
        #CUST_LOG %{IP:client_ip} %{HAPROXYDATE:date} %{WORD:server} %{WORD:method} %{URIPATH:uri} HTTP/%{NUMBER:httpver} %{NUMBER:statuscode} %{NUMBER:csBytes} %{NUMBER:scBytes} %{WORD:hostname} %{NUMBER:client_wait}/%{NUMBER:queue_wait}/%{NUMBER:connection_wait}/%{NUMBER:server_wait}/%{NUMBER:elapsed} %{QS:useragent} %{IP:fe_ip}:%{NUMBER:fe_port} %{IP:be_ip}:%{NUMBER:be_port} %{NUMBER:conn_active}/%{NUMBER:conn_fe}/%{NUMBER:conn_be}/%{NUMBER:conn_srv}/%{NUMBER:retries}
        #CUST_LOG %{IP:client_ip} %{HAPROXYDATE:date} %{WORD:server} %{WORD:method} %{URIPATH:uri} HTTP/%{NUMBER:httpver} %{NUMBER:statuscode} %{NUMBER:csBytes} %{NUMBER:scBytes} %{WORD:hostname} %{NUMBER:client_wait}/%{NUMBER:queue_wait}/%{NUMBER:connection_wait}/%{NUMBER:server_wait}/%{NUMBER:elapsed} %{QS:useragent} %{IP:fe_ip}:%{NUMBER:fe_port} %{IP:be_ip}:%{NUMBER:be_port} %{NUMBER:conn_active}/%{NUMBER:conn_fe}/%{NUMBER:conn_be}/%{NUMBER:conn_srv}/%{NUMBER:retries}
        CUST_LOG %{IP:client_ip} %{HAPROXYDATE:date} %{WORD:server:tag} %{WORD:method} %{URIPATH:uri:tag} HTTP/%{NUMBER:httpver} %{NUMBER:statuscode:tag} %{NUMBER:csBytes:int} %{NUMBER:scBytes:int} %{WORD:hostname} %{NUMBER:client_wait:int}/%{NUMBER:queue_wait:int}/%{NUMBER:connection_wait:int}/%{NUMBER:server_wait:int}/%{NUMBER:elapsed:int} %{QS:useragent} %{IP:fe_ip}:%{NUMBER:fe_port} %{IP:be_ip}:%{NUMBER:be_port} %{NUMBER:conn_active:int}/%{NUMBER:conn_fe:int}/%{NUMBER:conn_be:int}/%{NUMBER:conn_srv:int}/%{NUMBER:retries:int}
        HAPROXYDATE \[%{MONTHDAY:haproxy_hour}/%{MONTH:haproxy_month}/%{YEAR:haproxy_year}:%{HOUR:haproxy_hour}:%{MINUTE:haproxy_minute}:%{SECOND:haproxy_second}\]
    '''

[[outputs.file]]
  ## Files to write to, "stdout" is a specially handled file.
  files = ["stdout"]

  ## Data format to output.
  ## Each data format has its own unique set of configuration options, read
  ## more about them here:
  ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_OUTPUT.md
  data_format = "influx"
